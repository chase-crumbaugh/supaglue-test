// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AddressesAddressTypeEnum string

const (
	AddressesAddressTypeEnumPrimary  AddressesAddressTypeEnum = "primary"
	AddressesAddressTypeEnumMailing  AddressesAddressTypeEnum = "mailing"
	AddressesAddressTypeEnumOther    AddressesAddressTypeEnum = "other"
	AddressesAddressTypeEnumBilling  AddressesAddressTypeEnum = "billing"
	AddressesAddressTypeEnumShipping AddressesAddressTypeEnum = "shipping"
)

func (e *AddressesAddressTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "primary":
		fallthrough
	case "mailing":
		fallthrough
	case "other":
		fallthrough
	case "billing":
		fallthrough
	case "shipping":
		*e = AddressesAddressTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AddressesAddressTypeEnum: %s", s)
	}
}

type Addresses struct {
	AddressType AddressesAddressTypeEnum `json:"address_type"`
	City        string                   `json:"city"`
	Country     string                   `json:"country"`
	PostalCode  string                   `json:"postal_code"`
	State       string                   `json:"state"`
	Street1     string                   `json:"street1"`
	Street2     string                   `json:"street2"`
}
