// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type SendPassthroughRequestHeaders struct {
	// The customer ID that uniquely identifies the customer in your application
	XCustomerID string `header:"style=simple,explode=false,name=x-customer-id"`
	// The provider name
	XProviderName string `header:"style=simple,explode=false,name=x-provider-name"`
}

type SendPassthroughRequestRequestBodyMethodEnum string

const (
	SendPassthroughRequestRequestBodyMethodEnumGet    SendPassthroughRequestRequestBodyMethodEnum = "GET"
	SendPassthroughRequestRequestBodyMethodEnumPost   SendPassthroughRequestRequestBodyMethodEnum = "POST"
	SendPassthroughRequestRequestBodyMethodEnumPut    SendPassthroughRequestRequestBodyMethodEnum = "PUT"
	SendPassthroughRequestRequestBodyMethodEnumPatch  SendPassthroughRequestRequestBodyMethodEnum = "PATCH"
	SendPassthroughRequestRequestBodyMethodEnumDelete SendPassthroughRequestRequestBodyMethodEnum = "DELETE"
)

func (e *SendPassthroughRequestRequestBodyMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PUT":
		fallthrough
	case "PATCH":
		fallthrough
	case "DELETE":
		*e = SendPassthroughRequestRequestBodyMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SendPassthroughRequestRequestBodyMethodEnum: %s", s)
	}
}

type SendPassthroughRequestRequestBody struct {
	// Body to pass to downstream
	Body *string `json:"body,omitempty"`
	// Headers to pass to downstream
	Headers map[string]string                           `json:"headers,omitempty"`
	Method  SendPassthroughRequestRequestBodyMethodEnum `json:"method"`
	// The path to send the request to (do not pass the domain)
	Path string `json:"path"`
	// Query parameters to pass to downstream
	Query map[string]string `json:"query,omitempty"`
}

type SendPassthroughRequestRequest struct {
	Headers SendPassthroughRequestHeaders
	Request SendPassthroughRequestRequestBody `request:"mediaType=application/json"`
}

// SendPassthroughRequest200ApplicationJSON - Passthrough response
type SendPassthroughRequest200ApplicationJSON struct {
	// The body from the downstream
	Body interface{} `json:"body,omitempty"`
	// The response headers from the downstream
	Headers map[string]string `json:"headers"`
	// Status code from the downstream
	Status float64 `json:"status"`
	// The full URL the request was went to
	URL string `json:"url"`
}

type SendPassthroughRequestResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Passthrough response
	SendPassthroughRequest200ApplicationJSONObject *SendPassthroughRequest200ApplicationJSON
}
